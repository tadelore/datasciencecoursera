ls()
local({fn<-choose.files(filters=Filters[c('R','txt','All'),],index=4)
file.show(fn,header=fn,title='')})
update.packages(ask='graphics',checkBuilt=TRUE)
q()
dpois(0,10)
dbinom([0,1,2],20,0.05)
dbinom([0 1 2],20,0.05)
dbinom(0 1 2,20,0.05)
dbinom(0,20,0.05)
dbinom(1,20,0.05)
dbinom(2,20,0.05)
1 - (dbinom(0,20,0.05)+dbinom(1,20,0.05),dbinom(2,20,0.05))
1 - (dbinom(0,20,0.05)+dbinom(1,20,0.05)+dbinom(2,20,0.05))
(dbinom(0,18,0.1)+dbinom(1,18,0.1)+dbinom(2,18,0.1))
dbinom(0,20,0.05)*dbinom(0,20,0.1)
ppois(0.95,2)
qpois(0.1353,2)
ppois(0.05,2)
qpois(0.95,2)
qpois(0.95,4)
pbinom(0.5,365,0.055)
dbinom(1,365,0.055)
dbinom(1,365,0.50)
pbinom(4,365,20/365)
ppois(4,20)
dbinom(4,365,20/365)
dpois(4,20)
dpois(4,4)
dpois(4,2)
pnorn(0.8)
pnorm(0.8)
pnorm(1.7)
pnorm(1)
pnorm(1.63)
pnorm(0.658)
pnorm(0.789)
pnorm(2.37)
pnorm(3.95)
dnorm(2.261)
pnorm(2.261)
qnorm(0.95)
qnorm(0.95)
qnorm(0.05)
pnorm(1)
pnorm(1.54)
pnorm(1.38)
dbinom(29,84,0.24)
dnorm(2.261)
pnorm(2.261)
1-pnorm(2.261)
pnorm(28.5-20.16/sqrt(15.32))
dnorm(28.5-20.16/sqrt(15.32))
dnorm((28.5-20.16)/sqrt(15.32))
1-dnorm((28.5-20.16)/sqrt(15.32))
pnorm((28.5-20.16)/sqrt(15.32))
1-pnorm((28.5-20.16)/sqrt(15.32))
dnorm((28.5-20.16)/sqrt(15.32))
pbinom(0,5,0.078)
1-pbinom(0,5,0.078)
45/10112
install.packages("mgcv")
32.82/10112
0.078*0.922
sqrt(0.078*0.922)
(175-230)/(35/sqrt(24))
qt(0.05,23)
pt(-7.698,23)
qt(0.025,23)
qt(0.975,23)
qt(0.975,23)*(35/sqrt(24))+175
qt(0.025,23)*(35/sqrt(24))+175
MI <- matrix(c(40,10,1960,1990), ncol=2)
view(MI)
View(MI)
MI <- matrix(c(40,10,1960,990), ncol=2)
results <- chisq.yest(MI)
results <- chisq.test(MI)
results$expected
chisq.test(MI,correct=FALSE)
CC <- matrix(c(-2.35,-0.26,-2.20,-0.03,-2.12,0.30,-1.95,0.37,-1.85,0.40,-1.80,0.50,-1.70,0.55,-1.58,0.55), ncol=2)
view(CC)
View(CC)
CC <- matrix(c(-2.35,-2.20,-2.12,-1.95,-1.85,-1.80,-1.70,-1.58,-0.26,-0.03,0.30,0.37,0.40,0.50,0.55.0.55), ncol=2)
CC <- matrix(c(-2.35,-2.20,-2.12,-1.95,-1.85,-1.80,-1.70,-1.58,-0.26,-0.03,0.30,0.37,0.40,0.50,0.55,0.55), ncol=2)
View(CC)
plot (CC)
plot (CC[1],CC[2])
plot (CC)
plot (CC[,2],CC[,1])
cor.test(CC,"pearson")
cor.test(CC[,2], CC[,1],"pearson")
cor.test(CC[,2], CC[,1],'two.sided',"pearson")
cor.test(CC[,2], CC[,1],'two.sided',"spearman")
lm(CC)
lm(CC[,2] ~ CC[,1])
summary(lm)
summary(lm(CC[,2] ~ CC[,1]))
abline(plot (CC[,2],CC[,1]))
abline(2.3163,1.0386)
plot(lm(CC[,2] ~ CC[,1]))
abline(a=2.3163,b=1.0386)
abline(reg==CC)
abline(reg==CC[,2],CC[,1])
abline(lm(CC[,2] ~ CC[,1]))
abline(lm(CC[,2]~CC[,1]))
plot (CC[,2],CC[,1])
plot (CC[,2],CC[,1])
abline(lm(CC[,2]~CC[,1]))
abline(0,1)
CC <- matrix(c(-2.35,-2.20,-2.12,-1.95,-1.85,-1.80,-1.70,-1.58,-0.26,-0.03,0.30,0.37,0.40,0.50,0.55,0.55), ncol=2)
summary(lm(CC[,1] ~ CC[,2]))
x = [50 48 55 62 70 40 44 42 58 60]
x <- matrix(c(50 48 55 62 70 40 44 42 58 60), ncol-1)
x <- matrix(c(50, 48, 55, 62, 70, 40, 44, 42, 58, 60), ncol-1)
x <- matrix(c(50, 48, 55, 62, 70, 40, 44, 42, 58, 60), ncol=1)
View(x)
y = -4.610+0.110*x
View(y)
plot(y,x)
plot(x,y)
abline(plot(x,y))
abline(a=-4.610,b=0.110)
((1.852-1.692)/sqrt(((0.817^2)/662)+((0.855^2)/13)))
dnorm(0.95)
pnorm(0.66875)
((1.646-1.640)/sqrt(((0.478^2)/5191)+((0.480^2)/3892)))
((2.222-1.976)/sqrt(((0.441^2)/9)+((0.873^2)/85)))
((1.629-1.622)/sqrt(((0.483^2)/4563)+((0.485^2)/9720)))
((0.986-0.929)/sqrt(((0.119^2)/279)+((0.257^2)/1323)))
a <- available.packages() head(rownames(a),3)
a <- available.packages() head(rownames(a),3)
a <- available.packages()
View(a)
View(a)
find.package('devtools')
install.packages("KernSmooth")
library(KernSmooth)
library(swirl)
swirl()
bye()
swirl()
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep (NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
x[!is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[300]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- c(1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, 4, 5)
identical(my_matrix, my_matrix2)
patients < - c("Bill", "Gina", "Kelly", "Sean")
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients,my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patients", "age", "weight", "bp", "rating", "test")
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
?seq_len
swirl()
library(swirl)
swirl()
0
bye()
swirl()
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
!(5 = 7)
!(5 == 7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 !=8 && 4 > 3.9
isTRUE(6>4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints>7)
any (ints < 0)
all (ints > 0)
Sys.Date()
mean (c(2, 4, 5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4, 5, 10))
submit()
remainder(5)
remainder(11, 5)
remainder(divisor=11, num=5)
remainder(4, div=2)
args(remainder)
submit()
?standard deviation
?standarddeviation
?deviation
?sd
evaluate(sd,c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1},6)
evaluate(function(x){x[1]},c(8, 4, 0))
evaluate(function(x){x[3]},c(8, 4, 0))
evaluate(function(x){x[length(x)]},c(8, 4, 0))
?paste
paste("Programming", "is", "fun")
paste("Programming", "is", "fun!")
submit()
telegram("Hello", "World")
submit()
mad_libs(place="Kentucky", adjective="bright", noun="Tom")
submit()
submit()
submit()
submit()
submit()
'Hello' %p% 'student'
'Hello' %p% 'student'
info()
submit(0)
submit()
'Hello' %p% 'student'
submit()
'Hello' %p% 'student'
submit()
submit()
'Hello' %p% 'student'
submit()
'I' %p% 'love' %p% 'R'
'I' %p% 'love'
'I' %p% ('love' %p% 'R')
'I' %p% 'love' %p% 'R!'
i
x <- 4
class(x)
x <- 4i
class(x)
?i
x <- c(4, TRUE)
class(x)
X <- C(1,3,5)
X <- c(1,3,5)
y <- c(3,2,10)
cbind(x,y)
X <- list(2, "a", "b", TRUE)
x[[2]]
X[[2]]
pwd()
wd()
cwd()
setwd("~/Temilade Adelore_Office/Research/DataScienceCourse/Rprogramming/Week1")
?wd
?setwd
getwd()
ls()
?ls
hw1_data <- read.csv("hw1_data.csv", header = TRUE, sep = ",")
hw1_data[1:2,]
hw1_data[152:153,]
hw1_data[47,1]
hw1_data[47,"Ozone"]
is.na(hw1_data[,"Ozone"])
is.na(hw1_data[,"Ozone"])==1
na_ozone <- is.na(hw1_data[,"Ozone"])
lenght(na_ozone==TRUE)
`length(na_ozone==TRUE)
length(na_ozone==TRUE)
View(hw1_data)
length(na_ozone)
length(na_ozone==1)
length(na_ozone==0)
length(na_ozone=0)
SUM(na_ozone==1)
sum(na_ozone==1)
mean(hw1_data[:,"Ozone"], na.rm=TRUE)
mean(hw1_data[:,1], na.rm=TRUE)
mean(x=hw1_data[:,1], na.rm=TRUE)
mean(x=hw1_data[[:,1]], na.rm=TRUE)
ozone <- hw1_data[:,1]
mean(x=hw1_data[,1], na.rm=TRUE)
subset <- hw1_data[,"ozone">31] && hw1_data[,"Temp"> 90]
hw1_data[,"ozone">31]
x <- hw1_data[,"ozone">31]
y <- hw1_data[,"Temp"> 90]
hw1_q18 <- x && y
hw1_q18 <- x & y
View(x)
View(hw1_q18)
hw1_q18 <- cbind (x,y)
View(hw1_q18)
View(hw1_q18)
x <- hw1_data[,"ozone">31&& "temp">90]
View(hw1_q18)
View(hw1_q18)
View(x)
View(hw1_data)
View(hw1_q18)
View(hw1_q18)
mean(x[,"Solar.R"])
mean(x[,"Solar.R"], na.rm=TRUE)
y <- hw1_data[,"Temp"==6]
y <- hw1_data[,"Month"==6]
mean(y[,"Temp"], na.rm=TRUE)
View(y)
y <- hw1_data[,"Month" == 6]
y <- hw1_data[,"month" == 6]
y <- hw1_data[,"month" == 5]
y <- hw1_data[,"Month"]
y <- hw1_data[,"Month"] == 5
y <- hw1_data[,]("Month" == 5)
y <- hw1_data[,"Month" == 5]
y <- hw1_data[,5 == 5]
View(y)
y <- hw1_data[,== 5]
y <- hw1_data[[]]
y <- hw1_data[[,]]
y <- hw1_data[,]
y <- hw1_data[,5]
view(y)
View(y)
y <- hw1_data[,"Month"]
View(y)
y1 <- hw1_data[,"Month"]
